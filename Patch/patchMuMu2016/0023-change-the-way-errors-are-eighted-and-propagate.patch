From be0cd40719a71bc282df5a3a50e7cb7674901030 Mon Sep 17 00:00:00 2001
From: baudurie <benjamin.audurier@cern.ch>
Date: Wed, 15 Jun 2016 15:32:56 +0200
Subject: [PATCH 23/36] change the way errors are eighted and propagate

---
 PWG/muondep/AliAnalysisMuMuResult.cxx | 89 ++++++++++++++---------------------
 1 file changed, 35 insertions(+), 54 deletions(-)

diff --git a/PWG/muondep/AliAnalysisMuMuResult.cxx b/PWG/muondep/AliAnalysisMuMuResult.cxx
index 4dfc374..e90257a 100644
--- a/PWG/muondep/AliAnalysisMuMuResult.cxx
+++ b/PWG/muondep/AliAnalysisMuMuResult.cxx
@@ -336,8 +336,9 @@ void AliAnalysisMuMuResult::Exclude(const char* subResultList)
 //_____________________________________________________________________________
 Double_t AliAnalysisMuMuResult::GetErrorStat(const char* name, const char* subResultName) const
 {
-  // compute the mean value from all subresults that are included
+  // compute the mean error value from all subresults that are included
   
+  // If we specify a subresults
   if ( strlen(subResultName) > 0 )
   {
     if ( !fSubResults)
@@ -353,7 +354,7 @@ Double_t AliAnalysisMuMuResult::GetErrorStat(const char* name, const char* subRe
     }
     return sub->GetErrorStat(name);
   }
-  
+  // ??
   if ( fMap )
   {
     TObjArray* p = static_cast<TObjArray*>(fMap->GetValue(name));
@@ -369,54 +370,38 @@ Double_t AliAnalysisMuMuResult::GetErrorStat(const char* name, const char* subRe
   
   if ( fResultMergingMethod == kMean )
   {
-    
+    // Mean method (by default)
     Int_t n(0);
-//    Double_t v1(0);
-//    Double_t v2(0);
-//    Double_t d(0);
     
-//    Double_t mean = GetValue(name);
-    Double_t wval = 0, wval2 = 0, w2err2 = 0, sumw = 0;
+    Double_t/* wval = 0, wval2 = 0,*/ werr = 0, sumw = 0;
     while ( ( r = static_cast<AliAnalysisMuMuResult*>(next()) ) )
     {
+      // Loop on all subresults
       if ( IsIncluded(r->Alias()) && r->HasValue(name) )
       {
-        Double_t val = r->GetValue(name);
-        Double_t err = r->GetErrorStat(name);
+        // COMMENTS OUTDATED !
+        // The weight for each subresult is the same (=1.), since the data sample is always the same and just the fit function changes among subresults. 
+        // Before subresults were weighted with 1./err/err/wstat; 
+        // wstat was not there before and was introduced to remove the dependence of the error with the Nof extracted Jpsi (valid only for counts results with different data samples and not for <pt>...)
 
+        // weight and error
+        Double_t w   = r->Weight(); 
+        Double_t err = r->GetErrorStat(name);
+        
+        AliDebug(1,Form(" ----> Weight for subResults %s = %f \n", r->GetName(),w)); 
         if ( !(err>0.0 ) ) continue; // If the error is not correct we skip the subresult
-        // weight
-        Double_t wstat = 1./val;
-        Double_t w = 1.; // The weight for each subresult is the same (=1.), since the data sample is always the same and just the fit function changes among subresults. Before subresults were weighted with 1./err/err/wstat; wstat was not there before and was introduced to remove the dependence of the error with the Nof extracted Jpsi (valid only for counts results with different data samples and not for <pt>...)
+                
+        // stat and sum of weight
+        werr += w*err;
         sumw += w;
         
-        // mean
-        wval += w*val;
-        
-        // stat
-        w2err2 += w*w*err*err;
-        
-        // rms
-        wval2 += w*val*val;
-        
-//        Double_t error = r->GetErrorStat(name);
-//
-//        Double_t e2 = error*error;
-//        
-//        if ( !(e2>0.0 ) ) e2 = TMath::Sqrt(r->GetValue(name));
-//
-//
-//        v1 += 1.0/e2;
-//        v2 += 1.0/(e2*e2);
-//          
-//        d += ( (r->GetValue(name) - mean)*(r->GetValue(name)-mean) / e2);
         ++n;
       }
     }
-    
-    if ( n<1 ) return 0.0;
-    
-    if ( n == 1 )
+    // Case something went wrong
+    if ( n<1 ) return 0.0; 
+    // case we have one single results
+    if ( n == 1 ) 
     {
       next.Reset();
       while ( ( r = static_cast<AliAnalysisMuMuResult*>(next()) ) )
@@ -427,16 +412,8 @@ Double_t AliAnalysisMuMuResult::GetErrorStat(const char* name, const char* subRe
         }
       }
     }
-    // results
-//    mean = wval/sumw;
-    return TMath::Sqrt(w2err2*n)/sumw;
-//    sys = TMath::Sqrt(wval2/sumw - mean*mean);
-    
-//    Double_t variance= (1.0/v1)*(1.0/(n-1))*d;
-//    // variance corrected by over/under-estimation of errors
-//    // i.e. scaled by chisquare per ndf
     
-//    return TMath::Sqrt(variance);
+    return werr/sumw;
   }
   else
   {
@@ -552,7 +529,7 @@ Double_t AliAnalysisMuMuResult::GetRMS(const char* name, const char* subResultNa
   
   Double_t biased = TMath::Sqrt( sum/v1 );
   
-  AliDebug(1,Form("v1 %e v1*v1 %e v2 %e -> biased %e unbiased %e (ratio %e)",v1,v1*v1,v2,biased,unbiased,unbiased/biased));
+  AliDebug(1,Form(" ----> v1 %e v1*v1 %e v2 %e -> biased %e unbiased %e (ratio %e) \n",v1,v1*v1,v2,biased,unbiased,unbiased/biased));
   
   return unbiased;
 }
@@ -611,23 +588,27 @@ Double_t AliAnalysisMuMuResult::GetValue(const char* name, const char* subResult
   if ( fResultMergingMethod == kMean )
   {
     Double_t mean(0);
-    Double_t errorSum(0.0);
+    Double_t Sum(0.0);
 
     while ( ( r = static_cast<AliAnalysisMuMuResult*>(next()) ) )
     {
       if ( IsIncluded(r->Alias()) && r->HasValue(name) )
       {
-        Double_t e = 1.; // The weight for each subresult is the same (=1.), since the data sample is always the same and just the fit function changes among subresults. Before subresults were weighted with e = r->GetErrorStat(name)/TMath::Sqrt(r->GetValue(name)); //The Sqrt(r->GetValue(name)) was not there before and was introduced to remove the dependence of the error with the Nof extracted Jpsi (valid only for counts results with different data samples and not for <pt>...)
-        Double_t e2 = e*e;
+        // The weight for each subresult is the same (=1.), since the data sample is always the same and just the fit function changes among subresults. 
+        // Before subresults were weighted with e = r->GetErrorStat(name)/TMath::Sqrt(r->GetValue(name));
+        //The Sqrt(r->GetValue(name)) was not there before and was introduced to remove the dependence of the error with the Nof extracted Jpsi (valid only for counts results with different data samples and not for <pt>...)
+        Double_t e = r->Weight();
+        AliDebug(1,Form(" ----> Weight for subResults %s = %f \n", r->GetName(),e));         
+        // Double_t e2 = e*e;
         if ( !(r->GetErrorStat(name)>0.0 ) ) continue; /*e2 = TMath::Sqrt(r->GetValue(name));*/ // If the error is not correct (fit not good) we skip the subresult
 
-        mean += r->GetValue(name)/e2;
-        errorSum += 1.0/e2;
+        mean += e*r->GetValue(name);
+        Sum += e;
       }
     }
-    if ( errorSum != 0.0 )
+    if ( Sum != 0.0 )
     {
-      return mean/errorSum;
+      return mean/Sum;
     }
     else
     {
-- 
2.7.4 (Apple Git-66)

