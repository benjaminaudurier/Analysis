From 38d38fc43e924b94957a8fbd15c8c75430b7b11c Mon Sep 17 00:00:00 2001
From: baudurie <benjamin.audurier@cern.ch>
Date: Mon, 20 Jun 2016 11:25:03 +0200
Subject: [PATCH 31/36] change plot style

---
 PWG/muondep/AliAnalysisMuMu.cxx                   |  15 +-
 PWG/muondep/AliAnalysisMuMuSpectraCapsulePbPb.cxx | 203 ++++++++++++++++++++--
 2 files changed, 202 insertions(+), 16 deletions(-)

diff --git a/PWG/muondep/AliAnalysisMuMu.cxx b/PWG/muondep/AliAnalysisMuMu.cxx
index 2326d67..5cba290 100644
--- a/PWG/muondep/AliAnalysisMuMu.cxx
+++ b/PWG/muondep/AliAnalysisMuMu.cxx
@@ -4597,16 +4597,19 @@ void AliAnalysisMuMu::ComputePPCrossSection(const char* binType, const char* par
                         c->SetFrameBorderMode(0);
 
                         TLegend * leg = 0x0;
+                        // @leg->SetTextSize(0.05);
                         if(sbinType->String().Contains("PT")) leg = new TLegend(0.2,0.2,0.50,0.4);
                         else if(sbinType->String().Contains("Y")) leg = new TLegend(0.2,0.2,0.50,0.4);
                         else leg = new TLegend(0.4,0.4,0.70,0.6);
 
-                        leg->SetHeader(Form("ALICE, pp #sqrt{#it{s}} = 5.02 TeV, L_{int} = 109 #mub^{-1}"));
-                        if(sbinType->String().Contains("PT")) leg->AddEntry(graph,"Inclusive J/#psi -> #mu+#mu- , 2.5 < #it{y} < 4","pe");
-                        if(sbinType->String().Contains("Y")) leg->AddEntry(graph,"Inclusive J/#psi -> #mu+#mu- , 0 < #it{p}_{T} < 12 GeV/c","pe");
+                        leg->SetHeader(Form("ALICE, pp #sqrt{#it{s}} = 5.02 TeV"));
+                        if(sbinType->String().Contains("PT")) leg->AddEntry(graph,"Inclusive J/#psi -> #mu+#mu- , 2.5 < #it{y} < 4 , L_{int} = 109 #mub^{-1}  ","pe");
+                        if(sbinType->String().Contains("Y")) leg->AddEntry(graph,"Inclusive J/#psi -> #mu+#mu- , 0 < #it{p}_{T} < 12 GeV/c, L_{int} = 109 #mub^{-1}","pe");
                         leg->AddEntry(graphErr,"systematic uncertainty ","f");
-                        if(sbinType->String().Contains("PT") || sbinType->String().Contains("Y"))leg->AddEntry((TObject*)0,"global uncert. : 3 %","");
-                        leg->SetTextSize(0.03);
+                        if(sbinType->String().Contains("PT") || sbinType->String().Contains("Y"))leg->AddEntry((TObject*)0,"global uncert. : 3 % ","");
+                        leg->SetTextSize(0.035);
+                        TLegendEntry *header = (TLegendEntry*)leg->GetListOfPrimitives()->First();
+                        header->SetTextSize(.06);
 
                         graphErr->DrawClone("A5.[]");
 
@@ -4618,6 +4621,8 @@ void AliAnalysisMuMu::ComputePPCrossSection(const char* binType, const char* par
                         leg->DrawClone("same");
                         gPad->RedrawAxis();
 
+                        
+
 
                     }
                 }
diff --git a/PWG/muondep/AliAnalysisMuMuSpectraCapsulePbPb.cxx b/PWG/muondep/AliAnalysisMuMuSpectraCapsulePbPb.cxx
index 81ffb8f..a5bf95d 100644
--- a/PWG/muondep/AliAnalysisMuMuSpectraCapsulePbPb.cxx
+++ b/PWG/muondep/AliAnalysisMuMuSpectraCapsulePbPb.cxx
@@ -32,6 +32,7 @@ ClassImp(AliAnalysisMuMuSpectraCapsulePbPb)
 #include "TGraphErrors.h"
 #include "THashList.h"
 #include "TLegend.h"
+#include "TLegendEntry.h"
 #include "TLine.h"
 #include "TList.h"
 #include "TMath.h"
@@ -40,6 +41,8 @@ ClassImp(AliAnalysisMuMuSpectraCapsulePbPb)
 #include "AliLog.h"
 #include "TCanvas.h"
 #include "TStyle.h"
+#include "TColor.h"
+#include "TROOT.h"
 #include "AliCounterCollection.h"
 #include "AliMergeableCollection.h"
 #include "AliAnalysisMuMuSpectra.h"
@@ -395,11 +398,25 @@ void AliAnalysisMuMuSpectraCapsulePbPb::DrawResults( const char* particle,const
     ny = TMath::Nint(TMath::Sqrt(nofResult));
     nx = TMath::Nint((nofResult/ny) +0.6);
   }
-  TCanvas *c = new TCanvas;
-  c->Draw();
+
+  TCanvas *c = new TCanvas("canFit", "canFit",0,45,1024,712);;
+  
+  // ------ Configure pad ------
+  gStyle->SetOptStat(0);
+  gStyle->SetOptTitle(0);
+  c->Range(0,0,1,1);
+  c->SetFillColor(0);
+  c->SetBorderMode(0);
+  c->SetBorderSize(0);
+  c->SetRightMargin(0.04989154);
+  c->SetTopMargin(0.04902248);
+  c->SetBottomMargin(0.0800598);
+  c->SetFrameBorderMode(0);
   c->Divide(nx,ny,0,0);
   c->SetTitle(Form("%s",fSpectraName.Data()));
-  gStyle->SetOptFit(1112);
+  c->Draw();
+  //____________________________
+
   AliDebug(1, Form(" Canvas divided in %dx%d",nx,ny));
 
   //Iterator on histos + counter
@@ -414,32 +431,196 @@ void AliAnalysisMuMuSpectraCapsulePbPb::DrawResults( const char* particle,const
     if (h){
       ++n;
       c->cd(n);// got to pad
-      gPad->SetLogy();
+      // gPad->SetLogy();
+      
+      // ------ Configure pad ------
+      gPad->SetFillColor(10);
+      gPad->SetBorderMode(0);
+      gPad->SetBorderSize(2);
+      gPad->SetTickx(1);
+      gPad->SetTicky(1);
+      gPad->SetLeftMargin(0.25);
+      gPad->SetRightMargin(0);
+      gPad->SetTopMargin(0);
+      gPad->SetBottomMargin(0.18);
+      gPad->SetFrameFillColor(0);
+      gPad->SetFrameBorderMode(0);
+      gPad->SetFrameBorderMode(0);
+      //____________________________
+
       if (xmin>0){
         // Loop to configure the pad as you like
         h->GetXaxis()->SetRangeUser(xmin,xmax);
         h->SetTitleSize(10);
       }
-      h->GetXaxis()->SetRangeUser(1.5,5.);
-      h->GetXaxis()->SetTitle("M GeV/c^2");
+
+      // ---- Configure histo ----
+      h->GetXaxis()->SetRangeUser(2.4,4.7);
+      Int_t ci;      // for color index setting
+      TColor *color; // for color definition with alpha
+      ci = TColor::GetColor("#000099");
+      h->SetLineColor(ci);
+      h->SetMarkerStyle(20);
+      h->SetMarkerSize(0.8);
+      h->GetXaxis()->SetTitle("m_{#mu#mu} (GeV/#it{c}^{2})");
+      // h->GetXaxis()->SetRange(48,94);
+      h->GetXaxis()->SetLabelFont(42);
+      h->GetXaxis()->SetLabelOffset(0.01);
+      h->GetXaxis()->SetLabelSize(0.078);
+      h->GetXaxis()->SetTitleSize(0.078);
+      h->GetXaxis()->SetTitleOffset(1.1);
+      h->GetXaxis()->SetTitleFont(42);
+      h->GetYaxis()->SetTitle(Form("Counts per %.0f MeV/#it{c}^{2}",1000*h->GetBinWidth(4)));
+      // gStyle->SetTitleAlign(13);
+      h->GetYaxis()->CenterTitle(true);
+      h->GetYaxis()->SetLabelFont(42);
+      h->GetYaxis()->SetLabelOffset(0.01);
+      h->GetYaxis()->SetLabelSize(0.07);
+      h->GetYaxis()->SetTitleSize(0.085);
+      h->GetYaxis()->SetTickLength(0.02);
+      h->GetYaxis()->SetTitleOffset(1.1);
+      h->GetYaxis()->SetTitleFont(42);
+      h->GetZaxis()->SetLabelFont(42);
+      h->GetZaxis()->SetLabelOffset(0.01);
+      h->GetZaxis()->SetLabelSize(0.05);
+      h->GetZaxis()->SetTitleSize(0.05);
+      h->GetZaxis()->SetTitleFont(42);
+      //____________________________
+
       h->Draw();
 
       //Get fitting functions and draw them
       f1 = h->GetFunction("signal+bck");
+      f1->SetFillColor(19);
+      f1->SetFillStyle(0);
+      f1->SetMarkerSize(1.3);
+      f1->SetLineColor(4);
+      f1->SetLineWidth(3);
+      f1->GetXaxis()->SetLabelFont(42);
+      f1->GetXaxis()->SetLabelSize(0.035);
+      f1->GetXaxis()->SetTitleSize(0.035);
+      f1->GetXaxis()->SetTitleFont(42);
+      f1->GetYaxis()->SetLabelFont(42);
+      f1->GetYaxis()->SetLabelSize(0.035);
+      f1->GetYaxis()->SetTitleSize(0.035);
+      f1->GetYaxis()->SetTitleFont(42);
+      Double_t chi2 =f1->GetChisquare()/f1->GetNDF();
+      Double_t sb =f1->GetChisquare()/f1->GetNDF();
+
+
       f2 = h->GetFunction("signalJPsi");
+      f2->SetFillColor(19);
+      f2->SetFillStyle(0);
+      f2->SetMarkerSize(1.3);
+      f2->SetLineColor(2);
+      f2->SetLineWidth(3);
+      f2->SetLineStyle(7);
+      f2->GetXaxis()->SetLabelFont(42);
+      f2->GetXaxis()->SetLabelSize(0.035);
+      f2->GetXaxis()->SetTitleSize(0.035);
+      f2->GetXaxis()->SetTitleFont(42);
+      f2->GetYaxis()->SetLabelFont(42);
+      f2->GetYaxis()->SetLabelSize(0.035);
+      f2->GetYaxis()->SetTitleSize(0.035);
+      f2->GetYaxis()->SetTitleFont(42);
+
       f3 = h->GetFunction("signalPsiP");
+      f3->SetFillColor(19);
+      f3->SetFillStyle(0);
+      f3->SetMarkerSize(1.3);
+      f3->SetLineColor(2);
+      f3->SetLineWidth(3);
+      f3->SetLineStyle(7);
+      f3->GetXaxis()->SetLabelFont(42);
+      f3->GetXaxis()->SetLabelSize(0.035);
+      f3->GetXaxis()->SetTitleSize(0.035);
+      f3->GetXaxis()->SetTitleFont(42);
+      f3->GetYaxis()->SetLabelFont(42);
+      f3->GetYaxis()->SetLabelSize(0.035);
+      f3->GetYaxis()->SetTitleSize(0.035);
+      f3->GetYaxis()->SetTitleFont(42);
+      
       f4 = h->GetFunction("bck");
+      f4->SetFillColor(19);
+      f4->SetFillStyle(0);
+      f4->SetMarkerSize(1.3);
+      f4->SetLineColor(17);
+      f4->SetLineWidth(3);
+      f4->SetLineStyle(7);
+      f4->GetXaxis()->SetLabelFont(42);
+      f4->GetXaxis()->SetLabelSize(0.035);
+      f4->GetXaxis()->SetTitleSize(0.035);
+      f4->GetXaxis()->SetTitleFont(42);
+      f4->GetYaxis()->SetLabelFont(42);
+      f4->GetYaxis()->SetLabelSize(0.035);
+      f4->GetYaxis()->SetTitleSize(0.035);
+      f4->GetYaxis()->SetTitleFont(42);
       
       if(f1) f1->DrawCopy("same");
       if(f2) f2->DrawCopy("same");
-      if(f3) f3->DrawCopy("same");
+      // if(f3) f3->DrawCopy("same");
       if(f4){
-        f4->SetLineColor(kBlue);
-        f4->SetLineStyle(16);
+        // f4->SetLineColor(kBlue);
+        // f4->SetLineStyle(16);
         f4->DrawCopy("same");
       }
       f1 = h->GetFunction("signal");
       if(f1) f1->DrawCopy("same");
+     
+
+      TLegend* leg = new TLegend(0.55,0.2,0.95,0.95);
+      leg->SetTextSize(0.035);
+
+      leg->SetBorderSize(0);
+
+      ci = 927;
+      color = new TColor(ci, 1, 1, 1, " ", 0);
+      leg->SetLineColor(ci);
+      leg->SetLineStyle(1);
+      leg->SetLineWidth(2);
+      leg->SetFillColor(0);
+      leg->SetFillStyle(0);
+
+      TLegendEntry *entry1 = leg->AddEntry((TObject*)0,"ALICE, pp #sqrt{#it{s}} = 5.02 TeV","");
+      entry1->SetTextFont(42);
+      entry1->SetLineColor(1);
+      entry1->SetLineStyle(1);
+      entry1->SetLineWidth(1);
+      entry1->SetMarkerColor(1);
+      entry1->SetMarkerStyle(21);
+      entry1->SetMarkerSize(1);
+      entry1->SetTextFont(42);
+
+      TLegendEntry *entry2 = leg->AddEntry((TObject*)0,"0 < #it{p}_{T }< 12 GeV/#it{c}^{2}, 2.5 < #it{y} < 4, L_{int} = 109 #mub^{-1}","");
+      entry2->SetTextFont(42);
+      entry2->SetLineColor(1);
+      entry2->SetLineStyle(1);
+      entry2->SetLineWidth(1);
+      entry2->SetMarkerColor(1);
+      entry2->SetMarkerStyle(21);
+      entry2->SetMarkerSize(1);
+      entry2->SetTextFont(42);
+
+      TLegendEntry *entry3=leg->AddEntry((TObject*)0,Form("#chi^{2}/ndf = %.2f",chi2),"");
+      entry3->SetLineColor(1);
+      entry3->SetLineStyle(1);
+      entry3->SetLineWidth(1);
+      entry3->SetMarkerColor(1);
+      entry3->SetMarkerStyle(21);
+      entry3->SetMarkerSize(1);
+      entry3->SetTextFont(42);
+      leg->Draw("same");
+
+      // pt = new TPaveText(0.3440666,0.322827,0.785787,0.4672496,"brNDC");
+      // pt->SetBorderSize(0);
+      // pt->SetFillStyle(0);
+      // pt->SetLineWidth(2);
+      // pt->SetTextAlign(12);
+      // pt->SetTextFont(42);
+      // pt->SetTextSize(0.0538);
+      // text = pt->AddText("Combinatorial background");
+      // text = pt->AddText("subtracted");
+      // pt->Draw()
       gPad->Modified();
       gPad->Update();
     }
@@ -663,9 +844,9 @@ Bool_t AliAnalysisMuMuSpectraCapsulePbPb::ComputeRAA(TString sbin, Double_t numA
   AliWarning("INNER NORMALIZATION FACTOR, YOU MIGHT CHECK THE CODE !!");
 
   Double_t CentralityNormalization =1.;
-  if (fSpectraName.Contains("V0M_00.00_90.00"))CentralityNormalization = 1.;
+  if (fSpectraName.Contains("V0M_00.00_90.00"))CentralityNormalization       = 1.;
   else if (fSpectraName.Contains("V0M_00.00_20.00")) CentralityNormalization = (2./9.);
-  else CentralityNormalization = (1./9.);
+  else CentralityNormalization                                               = (1./9.);
 
   // Taking 2015 value
   if(Mul2015!=0) MUL= Mul2015;
-- 
2.7.4 (Apple Git-66)

